apiVersion: admin.gloo.solo.io/v2
kind: IstioLifecycleManager
metadata:
  name: istio-control-plane-cluster-1
  namespace: gloo-mesh
  annotations:
    argocd.argoproj.io/sync-wave: "-8"
spec:
  installations:
      # The revision for this installation, such as 1-22
    - revision: 1-22
      # Names of image pull secrets to use to deploy the Istio controller.
      # TODO put the imagePullSecrets value
      #istioController:
      #  imagePullSecrets: []
      # List all workload clusters to install Istio into
      clusters:
      # TODO replace with cluster name
      - name: gloo-mesh-workload-cluster-1
        # If set to true, the spec for this revision is applied in the cluster
        defaultRevision: true
      # When set to true, the lifecycle manager allows you to perform in-place upgrades by skipping checks that are required for canary upgrades
      skipUpgradeValidation: true
      istioOperatorSpec:
        # Only the control plane components are installed
        # (https://istio.io/latest/docs/setup/additional-setup/config-profiles/)
        profile: minimal
        # Solo.io Istio distribution repository; required for Gloo Istio.
        # You get the repo key from your Solo Account Representative.
        # TODO
        hub: us-docker.pkg.dev/gloo-mesh/istio-workshops
        # Any Solo.io Gloo Istio tag
        tag: 1.22.1-solo
        namespace: istio-system
        # Mesh configuration
        meshConfig:
          # Enable access logging only if using.
          accessLogFile: /dev/stdout
          # Encoding for the proxy access log (TEXT or JSON). Default value is TEXT.
          accessLogEncoding: JSON
          # Enable span tracing only if using.
          enableTracing: true
          defaultConfig:
            # Wait for the istio-proxy to start before starting application pods
            holdApplicationUntilProxyStarts: true
            proxyMetadata:
              # Enable Istio agent to handle DNS requests for known hosts
              # Unknown hosts are automatically resolved using upstream DNS servers
              # in resolv.conf (for proxy-dns)
              ISTIO_META_DNS_CAPTURE: "true"
              # Enable automatic address allocation (for proxy-dns)
              ISTIO_META_DNS_AUTO_ALLOCATE: "true"
          # Set the default behavior of the sidecar for handling outbound traffic
          # from the application
          outboundTrafficPolicy:
            mode: ALLOW_ANY
          # The administrative root namespace for Istio configuration
          rootNamespace: istio-system
        # Traffic management
        values:
          global:
            # ImagePullSecrets for control plane ServiceAccount, list of secrets in the same namespace
            # to use for pulling any images in pods that reference this ServiceAccount.
            # Must be set for any cluster configured with private docker registry.
            # imagePullSecrets:
            # - private-registry-key
            meshID: gloo-mesh
            # TODO replace with cluster name
            network: gloo-mesh-workload-cluster-1
            multiCluster:
              # TODO replace with cluster name
              clusterName: gloo-mesh-workload-cluster-1
        # Traffic management
        components:
          pilot:
            k8s:
              env:
              # Disable selecting workload entries for local service routing.
              # Required for Gloo VirtualDestinaton functionality.
              - name: PILOT_ENABLE_K8S_SELECT_WORKLOAD_ENTRIES
                value: "false"
              # Reload cacerts when cert-manager changes it
              - name: AUTO_RELOAD_PLUGIN_CERTS
                value: "true"
          # # deploy istio-cni-node DaemonSet into the cluster. More info on the plugin-
          # # https://istio.io/latest/docs/setup/additional-setup/cni/
          # cni:
          #   enabled: true
          #   hub: us-docker.pkg.dev/gloo-mesh/istio-workshops
          #   tag: 1.22.1-solo
          #   namespace: kube-system
